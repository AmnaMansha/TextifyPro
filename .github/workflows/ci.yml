name: CI/CD Pipeline

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ main ]
  create:
    tags: [ 'v*' ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
      # Prevent all matrix jobs from failing if one fails
      fail-fast: false
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Type Check
        run: npx tsc --noEmit
        
      - name: Build
        run: npm run build
        env:
          CI: false # Prevent treating warnings as errors
        
      - name: Run tests
        run: npm test -- --passWithNoTests --watchAll=false
        
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Lint
        run: npm run lint || true # Don't fail on lint errors initially
        
      - name: Check for secrets
        uses: gitleaks/gitleaks-action@v2
        env:
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
        
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=your-project-key
            -Dsonar.organization=your-org-key

  release:
    needs: [test, code-quality]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build
        env:
          CI: false
        
      - name: Generate changelog
        id: changelog
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            try {
              const lastTag = execSync('git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo $(git rev-list --max-parents=0 HEAD)').toString().trim();
              const changelog = execSync(`git log ${lastTag}..HEAD --pretty=format:"* %s (%h)"`).toString().trim();
              return changelog || '* Initial release';
            } catch (error) {
              return '* Initial release';
            }
            
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.changelog.outputs.result }}
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docs:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build documentation
        run: npm run docs
        
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs