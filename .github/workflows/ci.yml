name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master

jobs:
  # Job 1: Unit Tests and Version Matrix
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x] # Add more versions as needed

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test -- --coverage

  # Job 2: Linting and Secrets Detection
  lint:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18.x

    - name: Install dependencies
      run: npm install

    - name: Run ESLint
      run: npm run lint

    - name: Run secrets detection with Gitleaks
      uses: gitleaks/gitleaks-action@v2
      env:
        github-token: ${{ secrets.GITHUB_TOKEN }}

  # Job 3: SonarCloud Analysis (using SONAR_TOKEN)
  sonar:
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Important for SonarCloud to get full SCM history
        
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@v4.1.0
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
          args: >
            -Dsonar.projectKey=AmnaMansha_TextifyPro
            -Dsonar.organization=amnamansha
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.sources=.
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
            -Dsonar.scm.provider=git
  # Job 4: Release Creation and Changelog Generation
  release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm test -- --watchAll=false

      - name: Build the Project
        run: npm run build

      - name: Generate Changelog
        id: changelog
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            CHANGELOG=$(git log --oneline --no-merges)
          else
            CHANGELOG=$(git log "$LAST_TAG"..HEAD --oneline --no-merges)
          fi
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Changelog
            ${{ env.CHANGELOG }}
          draft: false
          prerelease: false

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Build Artifacts
          path: ./build
        if: success()

      - name: Ensure Test Reports Directory Exists
        run: mkdir -p ./test-reports

      - name: Upload Test Reports
        uses: actions/upload-artifact@v3
        with:
          name: Test Reports
          path: ./test-reports/junit.xml
        if: always()
  # Job 5: Deploy Documentation to GitHub Pages
 
  deploy-docs:
    runs-on: ubuntu-latest
    needs: release

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18.x

    - name: Install dependencies
      run: npm install

    - name: Generate documentation
      run: npm run docs

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
