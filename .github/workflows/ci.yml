name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master

jobs:
  # Job 1: Unit Tests and Version Matrix
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x] # Add more versions as needed

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test -- --coverage

  # Job 2: Linting and Secrets Detection
  lint:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18.x

    - name: Install dependencies
      run: npm install

    - name: Run ESLint
      run: npm run lint

    - name: Run secrets detection with Gitleaks
      uses: zricethezav/gitleaks-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

  # Job 3: SonarQube Analysis (using SONAR_TOKEN)
  sonar:
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18.x

    - name: Install dependencies
      run: npm install

    - name: SonarQube Scan
      uses: SonarSource/sonarcloud-github-action@v1
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=AmnaMansha_TextifyPro
          -Dsonar.organization=amnamansha
      
        # Replace the following with the appropriate SonarQube settings if not using SonarCloud
        # sonar.organization: your-org
        # sonar.projectKey: your-project-key

  # Job 4: Release Creation and Changelog Generation
  release:
    runs-on: ubuntu-latest
    needs: sonar
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18.x

    - name: Install dependencies
      run: npm install

    - name: Generate changelog
      run: npx standard-version --release-as minor # Adjust the release type if needed

    - name: Create GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ github.ref }}
        name: Release ${{ github.ref }}
        files: ./dist/* # Add your build output or artifact here

  # Job 5: Deploy Documentation to GitHub Pages
  deploy-docs:
    runs-on: ubuntu-latest
    needs: release
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18.x

    - name: Install dependencies
      run: npm install

    - name: Generate documentation
      run: npm run docs

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
